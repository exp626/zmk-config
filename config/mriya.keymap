/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_reset {
            bindings = <&sys_reset>;
            key-positions = <51 56>;
            timeout-ms = <50>;
        };

        bt_reset {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <50 52 26>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC       &kp N1  &kp N2      &kp N3  &kp N4     &kp N5       &kp N6     &kp N7    &kp N8     &kp N9              &kp N0     &kp MINUS
&kp LWIN  &kp TAB       &kp Q   &kp W       &kp E   &kp R      &kp T        &kp Y      &kp U     &kp I      &kp O               &kp P      &kp LBKT   &mt RWIN RBKT
          &kp LCTRL     &kp A   &kp S       &kp D   &kp F      &kp G        &kp H      &kp J     &kp K      &kp L               &kp SEMI   &kp SQT
          &kp LEFT_ALT  &kp Z   &kp X       &kp C   &kp V      &kp B        &kp N      &kp M     &kp COMMA  &kp DOT             &kp SLASH  &kp BSLH
                                &kp DELETE  &mo 2   &kp SPACE  &kp LSHFT    &kp ENTER  &kp BSPC  &mo 1      &kp K_CONTEXT_MENU
            >;
        };

        lower_layer {
            bindings = <
         &kp KP_NUMLOCK  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5       &kp F6             &kp F7    &kp F8    &kp F9         &kp F10      &kp EQUAL
&kp F11  &kp CAPS        &none      &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp MINUS    &kp C_VOL_UP       &kp HOME  &kp UP    &kp PG_UP      &kp INS      &kp DEL    &mt RGUI F12
         &trans          &none      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp EQUAL    &kp C_MUTE         &kp LEFT  &kp DOWN  &kp RIGHT      &kp DELETE   &none
         &trans          &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans       &kp C_VOLUME_DOWN  &kp END   &kp DOWN  &kp PAGE_DOWN  &kp C_PAUSE  &kp RCTRL
                                    &trans     &trans     &trans     &trans       &trans             &trans    &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
        &kp F1     &kp F2        &kp F3        &kp F4        &kp F5          &kp F6             &kp F7            &kp F8    &kp F9         &kp F10    &kp F11        &kp F12
&trans  &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5             &kp NUMBER_6      &kp N7    &kp N8         &kp N9     &kp N0         &trans    &trans
        &trans     &kp EXCL      &kp AT        &kp HASH      &kp DLLR        &kp PRCNT          &kp CARET         &kp AMPS  &kp STAR       &kp LPAR   &kp RPAR       &kp PIPE
        &trans     &kp EQUAL     &kp MINUS     &kp PLUS      &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RBKT  &kp SEMICOLON  &kp COLON  &kp BACKSLASH  &trans
                                 &mo 3         &trans        &trans          &trans             &trans            &trans    &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
